# Generated by Django 3.1.3 on 2020-12-16 11:35

import ckeditor.fields
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.datetime_safe
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Care_House_Information',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('house_name', models.CharField(max_length=100)),
                ('location_id', models.CharField(max_length=100)),
                ('house_address_one', models.CharField(max_length=100)),
                ('house_address_two', models.CharField(default='', max_length=100)),
                ('postcode', models.CharField(max_length=100)),
                ('house_number', models.IntegerField(default=0)),
                ('house_email', models.EmailField(default='', max_length=254)),
                ('number_of_beds', models.IntegerField(choices=[(1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6), (7, 7), (8, 8), (9, 9), (10, 10), (11, 11), (12, 12)], default=1)),
                ('number_of_bathrooms', models.IntegerField(choices=[(1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6), (7, 7), (8, 8), (9, 9), (10, 10), (11, 11), (12, 12)], default=1)),
                ('house_type_of_accommodation', models.CharField(choices=[('Detached', 'Detached'), ('Semi-Detached', 'Semi-Detached'), ('Terraced', 'Terraced'), ('End of Terrace', 'End of Terrace'), ('Flat', 'Flat'), ('Studio Flat', 'Studio Flat'), ('Split-Level Flat', 'Split-Level Flat'), ('Converted Flat', 'Converted Flat'), ('Maisonette', 'Maisonette'), ('Cottage', 'Cottage'), ('Bungalow', 'Bungalow'), ('Mansion', 'Mansion')], max_length=50)),
                ('date_added', models.DateTimeField(default=django.utils.timezone.now)),
            ],
            options={
                'verbose_name_plural': 'Care House Information',
            },
        ),
        migrations.CreateModel(
            name='Local_Authority',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('authority_name', models.CharField(max_length=100)),
                ('authority_address', models.CharField(max_length=100)),
                ('authority_address_2', models.CharField(max_length=100)),
                ('authority_location', models.CharField(max_length=100)),
                ('authority_postcode', models.CharField(max_length=100)),
                ('authority_email', models.CharField(max_length=100)),
                ('authority_phone', models.IntegerField(default=0)),
                ('authority_emergency_number', models.IntegerField(default=0)),
                ('date_added', models.DateTimeField(default=django.utils.timezone.now)),
            ],
            options={
                'verbose_name_plural': 'Local Authority Information',
            },
        ),
        migrations.CreateModel(
            name='YP_General_Information',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('yp_first_name', models.CharField(max_length=100)),
                ('yp_assigned_id', models.CharField(max_length=100)),
                ('yp_surname', models.CharField(max_length=100)),
                ('yp_nickname', models.CharField(max_length=100)),
                ('yp_gender', models.CharField(choices=[('Male', 'Male'), ('Female', 'Female'), ('Other', 'Other')], max_length=50)),
                ('yp_previous_name', models.CharField(max_length=100)),
                ('yp_date_of_birth', models.DateField(default=django.utils.datetime_safe.date.today)),
                ('yp_ethnicity', models.CharField(choices=[('White - English/Welsh/Scottish/Northern Irish/British', 'White - English/Welsh/Scottish/Northern Irish/British'), ('White - Irish', 'White - Irish'), ('White - Gypsy or Irish Traveller', 'White - Gypsy or Irish Traveller'), ('White - Any other White background', 'White - Any other White background'), ('Mixed - White and Black Caribbean', 'Mixed - White and Black Caribbean'), ('Mixed - White and Black African', 'Mixed - White and Black African'), ('Mixed - White and Asian', 'Mixed - White and Asian'), ('Mixed - Any other Mixed/Multiple ethnic background', 'Mixed - Any other Mixed/Multiple ethnic background'), ('Asian - Indian', 'Asian - Indian'), ('Asian - Pakistani', 'Asian - Pakistani'), ('Asian - Bangladeshi', 'Asian - Bangladeshi'), ('Asian - Chinese', 'Asian - Chinese'), ('Asian - Any other Asian background', 'Asian - Any other Asian background'), ('Black - African', 'Black - African'), ('Black - Caribbean', 'Black - Caribbean'), ('Black - Any other Black/African/Caribbean background', 'Black - Any other Black/African/Caribbean background'), ('Arab', 'Arab'), ('Any other ethnic group', 'Any other ethnic group')], default='White - English/Welsh/Scottish/Northern Irish/British', max_length=100)),
                ('yp_nationality', models.CharField(choices=[('Afghanistan', 'Afghanistan'), ('Albania', 'Albania'), ('Algeria', 'Algeria'), ('Andorra', 'Andorra'), ('Angola', 'Angola'), ('Antigua and Barbuda', 'Antigua and Barbuda'), ('Argentina', 'Argentina'), ('Armenia', 'Armenia'), ('Australia', 'Australia'), ('Austria', 'Austria'), ('Azerbaijan', 'Azerbaijan'), ('The Bahamas', 'The Bahamas'), ('Bahrain', 'Bahrain'), ('Bangladesh', 'Bangladesh'), ('Barbados', 'Barbados'), ('Belarus', 'Belarus'), ('Belgium', 'Belgium'), ('Belize', 'Belize'), ('Benin', 'Benin'), ('Bhutan', 'Bhutan'), ('Bolivia', 'Bolivia'), ('Bosnia and Herzegovina', 'Bosnia and Herzegovina'), ('Botswana', 'Botswana'), ('Brazil', 'Brazil'), ('Brunei', 'Brunei'), ('Bulgaria', 'Bulgaria'), ('Burkina Faso', 'Burkina Faso'), ('Burundi', 'Burundi'), ('Cambodia', 'Cambodia'), ('Cameroon', 'Cameroon'), ('Canada', 'Canada'), ('Cape Verde', 'Cape Verde'), ('Central African Republic', 'Central African Republic'), ('Chad', 'Chad'), ('Chile', 'Chile'), ('China', 'China'), ('Colombia', 'Colombia'), ('Comoros', 'Comoros'), ('Congo, Republic ', 'Congo, Republic '), ('Congo, Democratic Republic', 'Congo, Democratic Republic'), ('Costa Rica', 'Costa Rica'), ('Cote D Ivoire', 'Cote D Ivoire'), ('Croatia', 'Croatia'), ('Cuba', 'Cuba'), ('Cyprus', 'Cyprus'), ('Czech Republic', 'Czech Republic'), ('Denmark', 'Denmark'), ('Djibouti', 'Djibouti'), ('Dominica', 'Dominica'), ('Dominican Republic', 'Dominican Republic'), ('East Timor (Timor-Leste)', 'East Timor (Timor-Leste)'), ('Ecuador', 'Ecuador'), ('Egypt', 'Egypt'), ('El Salvador', 'El Salvador'), ('Equatorial Guinea', 'Equatorial Guinea'), ('Eritrea', 'Eritrea'), ('Estonia', 'Estonia'), ('Ethiopia', 'Ethiopia'), ('Fiji', 'Fiji'), ('Finland', 'Finland'), ('France', 'France'), ('Gabon', 'Gabon'), ('The Gambia', 'The Gambia'), ('Georgia', 'Georgia'), ('Germany', 'Germany'), ('Ghana', 'Ghana'), ('Greece', 'Greece'), ('Grenada', 'Grenada'), ('Guatemala', 'Guatemala'), ('Guinea', 'Guinea'), ('Guinea-Bissau', 'Guinea-Bissau'), ('Guyana', 'Guyana'), ('Haiti', 'Haiti'), ('Honduras', 'Honduras'), ('Hungary', 'Hungary'), ('Iceland', 'Iceland'), ('India', 'India'), ('Indonesia', 'Indonesia'), ('Iran', 'Iran'), ('Iraq', 'Iraq'), ('Ireland', 'Ireland'), ('Israel', 'Israel'), ('Italy', 'Italy'), ('Jamaica', 'Jamaica'), ('Japan', 'Japan'), ('Jordan', 'Jordan'), ('Kazakhstan', 'Kazakhstan'), ('Kenya', 'Kenya'), ('Kiribati', 'Kiribati'), ('Korea, North', 'Korea, North'), ('Korea, South', 'Korea, South'), ('Kosovo', 'Kosovo'), ('Kuwait', 'Kuwait'), ('Kyrgyzstan', 'Kyrgyzstan'), ('Laos', 'Laos'), ('Latvia', 'Latvia'), ('Lebanon', 'Lebanon'), ('Lesotho', 'Lesotho'), ('Liberia', 'Liberia'), ('Libya', 'Libya'), ('Liechtenstein', 'Liechtenstein'), ('Lithuania', 'Lithuania'), ('Luxembourg', 'Luxembourg'), ('Macedonia', 'Macedonia'), ('Madagascar', 'Madagascar'), ('Malawi', 'Malawi'), ('Malaysia', 'Malaysia'), ('Maldives', 'Maldives'), ('Mali', 'Mali'), ('Malta', 'Malta'), ('Marshall Islands', 'Marshall Islands'), ('Mauritania', 'Mauritania'), ('Mauritius', 'Mauritius'), ('Mexico', 'Mexico'), ('Micronesia', 'Micronesia'), ('Moldova', 'Moldova'), ('Monaco', 'Monaco'), ('Mongolia', 'Mongolia'), ('Montenegro', 'Montenegro'), ('Morocco', 'Morocco'), ('Mozambique', 'Mozambique'), ('Myanmar (Burma)', 'Myanmar (Burma)'), ('Namibia', 'Namibia'), ('Nauru', 'Nauru'), ('Nepal', 'Nepal'), ('Netherlands', 'Netherlands'), ('New Zealand', 'New Zealand'), ('Nicaragua', 'Nicaragua'), ('Niger', 'Niger'), ('Nigeria', 'Nigeria'), ('Norway', 'Norway'), ('Oman', 'Oman'), ('Pakistan', 'Pakistan'), ('Palau', 'Palau'), ('Panama', 'Panama'), ('Papua New Guinea', 'Papua New Guinea'), ('Paraguay', 'Paraguay'), ('Peru', 'Peru'), ('Philippines', 'Philippines'), ('Poland', 'Poland'), ('Portugal', 'Portugal'), ('Qatar', 'Qatar'), ('Romania', 'Romania'), ('Russia', 'Russia'), ('Rwanda', 'Rwanda'), ('Saint Kitts and Nevis', 'Saint Kitts and Nevis'), ('Saint Lucia', 'Saint Lucia'), ('Saint Vincent and the Grenadines', 'Saint Vincent and the Grenadines'), ('Samoa', 'Samoa'), ('San Marino', 'San Marino'), ('Sao Tome and Principe', 'Sao Tome and Principe'), ('Saudi Arabia', 'Saudi Arabia'), ('Senegal', 'Senegal'), ('Serbia', 'Serbia'), ('Seychelles', 'Seychelles'), ('Sierra Leone', 'Sierra Leone'), ('Singapore', 'Singapore'), ('Slovakia', 'Slovakia'), ('Slovenia', 'Slovenia'), ('Solomon Islands', 'Solomon Islands'), ('Somalia', 'Somalia'), ('South Africa', 'South Africa'), ('South Sudan', 'South Sudan'), ('Spain', 'Spain'), ('Sri Lanka', 'Sri Lanka'), ('Sudan', 'Sudan'), ('Suriname', 'Suriname'), ('Swaziland', 'Swaziland'), ('Sweden', 'Sweden'), ('Switzerland', 'Switzerland'), ('Syria', 'Syria'), ('Taiwan', 'Taiwan'), ('Tajikistan', 'Tajikistan'), ('Tanzania', 'Tanzania'), ('Thailand', 'Thailand'), ('Togo', 'Togo'), ('Tonga', 'Tonga'), ('Trinidad and Tobago', 'Trinidad and Tobago'), ('Tunisia', 'Tunisia'), ('Turkey', 'Turkey'), ('Turkmenistan', 'Turkmenistan'), ('Tuvalu', 'Tuvalu'), ('Uganda', 'Uganda'), ('Ukraine', 'Ukraine'), ('United Arab Emirates', 'United Arab Emirates'), ('United Kingdom', 'United Kingdom'), ('United States of America', 'United States of America'), ('Uruguay', 'Uruguay'), ('Uzbekistan', 'Uzbekistan'), ('Vanuatu', 'Vanuatu'), ('Vatican City', 'Vatican City'), ('Venezuela', 'Venezuela'), ('Vietnam', 'Vietnam'), ('Yemen', 'Yemen'), ('Zambia', 'Zambia'), ('Zimbabwe', 'Zimbabwe')], default='United Kingdom', max_length=100)),
                ('yp_country_origin', models.CharField(choices=[('Afghanistan', 'Afghanistan'), ('Albania', 'Albania'), ('Algeria', 'Algeria'), ('Andorra', 'Andorra'), ('Angola', 'Angola'), ('Antigua and Barbuda', 'Antigua and Barbuda'), ('Argentina', 'Argentina'), ('Armenia', 'Armenia'), ('Australia', 'Australia'), ('Austria', 'Austria'), ('Azerbaijan', 'Azerbaijan'), ('The Bahamas', 'The Bahamas'), ('Bahrain', 'Bahrain'), ('Bangladesh', 'Bangladesh'), ('Barbados', 'Barbados'), ('Belarus', 'Belarus'), ('Belgium', 'Belgium'), ('Belize', 'Belize'), ('Benin', 'Benin'), ('Bhutan', 'Bhutan'), ('Bolivia', 'Bolivia'), ('Bosnia and Herzegovina', 'Bosnia and Herzegovina'), ('Botswana', 'Botswana'), ('Brazil', 'Brazil'), ('Brunei', 'Brunei'), ('Bulgaria', 'Bulgaria'), ('Burkina Faso', 'Burkina Faso'), ('Burundi', 'Burundi'), ('Cambodia', 'Cambodia'), ('Cameroon', 'Cameroon'), ('Canada', 'Canada'), ('Cape Verde', 'Cape Verde'), ('Central African Republic', 'Central African Republic'), ('Chad', 'Chad'), ('Chile', 'Chile'), ('China', 'China'), ('Colombia', 'Colombia'), ('Comoros', 'Comoros'), ('Congo, Republic ', 'Congo, Republic '), ('Congo, Democratic Republic', 'Congo, Democratic Republic'), ('Costa Rica', 'Costa Rica'), ('Cote D Ivoire', 'Cote D Ivoire'), ('Croatia', 'Croatia'), ('Cuba', 'Cuba'), ('Cyprus', 'Cyprus'), ('Czech Republic', 'Czech Republic'), ('Denmark', 'Denmark'), ('Djibouti', 'Djibouti'), ('Dominica', 'Dominica'), ('Dominican Republic', 'Dominican Republic'), ('East Timor (Timor-Leste)', 'East Timor (Timor-Leste)'), ('Ecuador', 'Ecuador'), ('Egypt', 'Egypt'), ('El Salvador', 'El Salvador'), ('Equatorial Guinea', 'Equatorial Guinea'), ('Eritrea', 'Eritrea'), ('Estonia', 'Estonia'), ('Ethiopia', 'Ethiopia'), ('Fiji', 'Fiji'), ('Finland', 'Finland'), ('France', 'France'), ('Gabon', 'Gabon'), ('The Gambia', 'The Gambia'), ('Georgia', 'Georgia'), ('Germany', 'Germany'), ('Ghana', 'Ghana'), ('Greece', 'Greece'), ('Grenada', 'Grenada'), ('Guatemala', 'Guatemala'), ('Guinea', 'Guinea'), ('Guinea-Bissau', 'Guinea-Bissau'), ('Guyana', 'Guyana'), ('Haiti', 'Haiti'), ('Honduras', 'Honduras'), ('Hungary', 'Hungary'), ('Iceland', 'Iceland'), ('India', 'India'), ('Indonesia', 'Indonesia'), ('Iran', 'Iran'), ('Iraq', 'Iraq'), ('Ireland', 'Ireland'), ('Israel', 'Israel'), ('Italy', 'Italy'), ('Jamaica', 'Jamaica'), ('Japan', 'Japan'), ('Jordan', 'Jordan'), ('Kazakhstan', 'Kazakhstan'), ('Kenya', 'Kenya'), ('Kiribati', 'Kiribati'), ('Korea, North', 'Korea, North'), ('Korea, South', 'Korea, South'), ('Kosovo', 'Kosovo'), ('Kuwait', 'Kuwait'), ('Kyrgyzstan', 'Kyrgyzstan'), ('Laos', 'Laos'), ('Latvia', 'Latvia'), ('Lebanon', 'Lebanon'), ('Lesotho', 'Lesotho'), ('Liberia', 'Liberia'), ('Libya', 'Libya'), ('Liechtenstein', 'Liechtenstein'), ('Lithuania', 'Lithuania'), ('Luxembourg', 'Luxembourg'), ('Macedonia', 'Macedonia'), ('Madagascar', 'Madagascar'), ('Malawi', 'Malawi'), ('Malaysia', 'Malaysia'), ('Maldives', 'Maldives'), ('Mali', 'Mali'), ('Malta', 'Malta'), ('Marshall Islands', 'Marshall Islands'), ('Mauritania', 'Mauritania'), ('Mauritius', 'Mauritius'), ('Mexico', 'Mexico'), ('Micronesia', 'Micronesia'), ('Moldova', 'Moldova'), ('Monaco', 'Monaco'), ('Mongolia', 'Mongolia'), ('Montenegro', 'Montenegro'), ('Morocco', 'Morocco'), ('Mozambique', 'Mozambique'), ('Myanmar (Burma)', 'Myanmar (Burma)'), ('Namibia', 'Namibia'), ('Nauru', 'Nauru'), ('Nepal', 'Nepal'), ('Netherlands', 'Netherlands'), ('New Zealand', 'New Zealand'), ('Nicaragua', 'Nicaragua'), ('Niger', 'Niger'), ('Nigeria', 'Nigeria'), ('Norway', 'Norway'), ('Oman', 'Oman'), ('Pakistan', 'Pakistan'), ('Palau', 'Palau'), ('Panama', 'Panama'), ('Papua New Guinea', 'Papua New Guinea'), ('Paraguay', 'Paraguay'), ('Peru', 'Peru'), ('Philippines', 'Philippines'), ('Poland', 'Poland'), ('Portugal', 'Portugal'), ('Qatar', 'Qatar'), ('Romania', 'Romania'), ('Russia', 'Russia'), ('Rwanda', 'Rwanda'), ('Saint Kitts and Nevis', 'Saint Kitts and Nevis'), ('Saint Lucia', 'Saint Lucia'), ('Saint Vincent and the Grenadines', 'Saint Vincent and the Grenadines'), ('Samoa', 'Samoa'), ('San Marino', 'San Marino'), ('Sao Tome and Principe', 'Sao Tome and Principe'), ('Saudi Arabia', 'Saudi Arabia'), ('Senegal', 'Senegal'), ('Serbia', 'Serbia'), ('Seychelles', 'Seychelles'), ('Sierra Leone', 'Sierra Leone'), ('Singapore', 'Singapore'), ('Slovakia', 'Slovakia'), ('Slovenia', 'Slovenia'), ('Solomon Islands', 'Solomon Islands'), ('Somalia', 'Somalia'), ('South Africa', 'South Africa'), ('South Sudan', 'South Sudan'), ('Spain', 'Spain'), ('Sri Lanka', 'Sri Lanka'), ('Sudan', 'Sudan'), ('Suriname', 'Suriname'), ('Swaziland', 'Swaziland'), ('Sweden', 'Sweden'), ('Switzerland', 'Switzerland'), ('Syria', 'Syria'), ('Taiwan', 'Taiwan'), ('Tajikistan', 'Tajikistan'), ('Tanzania', 'Tanzania'), ('Thailand', 'Thailand'), ('Togo', 'Togo'), ('Tonga', 'Tonga'), ('Trinidad and Tobago', 'Trinidad and Tobago'), ('Tunisia', 'Tunisia'), ('Turkey', 'Turkey'), ('Turkmenistan', 'Turkmenistan'), ('Tuvalu', 'Tuvalu'), ('Uganda', 'Uganda'), ('Ukraine', 'Ukraine'), ('United Arab Emirates', 'United Arab Emirates'), ('United Kingdom', 'United Kingdom'), ('United States of America', 'United States of America'), ('Uruguay', 'Uruguay'), ('Uzbekistan', 'Uzbekistan'), ('Vanuatu', 'Vanuatu'), ('Vatican City', 'Vatican City'), ('Venezuela', 'Venezuela'), ('Vietnam', 'Vietnam'), ('Yemen', 'Yemen'), ('Zambia', 'Zambia'), ('Zimbabwe', 'Zimbabwe')], default='United Kingdom', max_length=100)),
                ('yp_first_language', models.CharField(choices=[('Mandarin', 'Mandarin'), ('Spanish', 'Spanish'), ('English', 'English'), ('Hindi', 'Hindi'), ('Arabic', 'Arabic'), ('Portuguese', 'Portuguese'), ('Bengali', 'Bengali'), ('Russian', 'Russian'), ('Japanese', 'Japanese'), ('Punjabi', 'Punjabi'), ('German', 'German'), ('Javanese', 'Javanese'), ('Wu (inc. Shanghainese)', 'Wu (inc. Shanghainese)'), ('Malay/Indonesian', 'Malay/Indonesian'), ('Telugu', 'Telugu'), ('Vietnamese', 'Vietnamese'), ('Korean', 'Korean'), ('French', 'French'), ('Marathi', 'Marathi'), ('Tamil', 'Tamil'), ('Urdu', 'Urdu'), ('Turkish', 'Turkish'), ('Italian', 'Italian'), ('Yue (Cantonese)', 'Yue (Cantonese)'), ('Thai', 'Thai'), ('Gujarati', 'Gujarati'), ('Jin', 'Jin'), ('Southern Min', 'Southern Min'), ('Persian', 'Persian'), ('Polish', 'Polish'), ('Pashto', 'Pashto'), ('Kannada', 'Kannada'), ('Xiang (Hunnanese)', 'Xiang (Hunnanese)'), ('Malayalam', 'Malayalam'), ('Sundanese', 'Sundanese'), ('Hausa', 'Hausa'), ('Odia (Oriya)', 'Odia (Oriya)'), ('Burmese', 'Burmese'), ('Hakka', 'Hakka'), ('Ukrainian', 'Ukrainian'), ('Bhojpuri', 'Bhojpuri'), ('Tagalog', 'Tagalog'), ('Yoruba', 'Yoruba'), ('Maithili', 'Maithili'), ('Uzbek', 'Uzbek'), ('Sindhi', 'Sindhi'), ('Amharic', 'Amharic'), ('Fula', 'Fula'), ('Romanian', 'Romanian'), ('Oromo', 'Oromo'), ('Igbo', 'Igbo'), ('Azerbaijani', 'Azerbaijani'), ('Awadhi', 'Awadhi'), ('Gan Chinese', 'Gan Chinese'), ('Cebuano (Visayan)', 'Cebuano (Visayan)'), ('Dutch', 'Dutch'), ('Kurdish', 'Kurdish'), ('Serbo-Croatian', 'Serbo-Croatian'), ('Malagasy', 'Malagasy'), ('Saraiki', 'Saraiki'), ('Nepali', 'Nepali'), ('Sinhalese', 'Sinhalese'), ('Chittagonian', 'Chittagonian'), ('Zhuang', 'Zhuang'), ('Khmer', 'Khmer'), ('Turkmen', 'Turkmen'), ('Assamese', 'Assamese'), ('Madurese', 'Madurese'), ('Somali', 'Somali'), ('Marwari', 'Marwari'), ('Magahi', 'Magahi'), ('Haryanvi', 'Haryanvi'), ('Hungarian', 'Hungarian'), ('Chhattisgarhi', 'Chhattisgarhi'), ('Greek', 'Greek'), ('Chewa', 'Chewa'), ('Deccan', 'Deccan'), ('Akan', 'Akan'), ('Kazakh', 'Kazakh'), ('Northern Min', 'Northern Min'), ('Sylheti', 'Sylheti'), ('Zulu', 'Zulu'), ('Czech', 'Czech'), ('Kinyarwanda', 'Kinyarwanda'), ('Dhundhari', 'Dhundhari'), ('Haitian Creole', 'Haitian Creole'), ('Eastern Min', 'Eastern Min'), ('Ilocano', 'Ilocano'), ('Quechua', 'Quechua'), ('Kirundi', 'Kirundi'), ('Swedish', 'Swedish'), ('Hmong', 'Hmong'), ('Shona', 'Shona'), ('Uyghur', 'Uyghur'), ('Hiligaynon', 'Hiligaynon'), ('Mossi', 'Mossi'), ('Xhosa', 'Xhosa'), ('Belarusian', 'Belarusian'), ('Balochi', 'Balochi'), ('Konkani', 'Konkani')], max_length=50)),
                ('yp_other_spoken_languages', models.CharField(choices=[('Mandarin', 'Mandarin'), ('Spanish', 'Spanish'), ('English', 'English'), ('Hindi', 'Hindi'), ('Arabic', 'Arabic'), ('Portuguese', 'Portuguese'), ('Bengali', 'Bengali'), ('Russian', 'Russian'), ('Japanese', 'Japanese'), ('Punjabi', 'Punjabi'), ('German', 'German'), ('Javanese', 'Javanese'), ('Wu (inc. Shanghainese)', 'Wu (inc. Shanghainese)'), ('Malay/Indonesian', 'Malay/Indonesian'), ('Telugu', 'Telugu'), ('Vietnamese', 'Vietnamese'), ('Korean', 'Korean'), ('French', 'French'), ('Marathi', 'Marathi'), ('Tamil', 'Tamil'), ('Urdu', 'Urdu'), ('Turkish', 'Turkish'), ('Italian', 'Italian'), ('Yue (Cantonese)', 'Yue (Cantonese)'), ('Thai', 'Thai'), ('Gujarati', 'Gujarati'), ('Jin', 'Jin'), ('Southern Min', 'Southern Min'), ('Persian', 'Persian'), ('Polish', 'Polish'), ('Pashto', 'Pashto'), ('Kannada', 'Kannada'), ('Xiang (Hunnanese)', 'Xiang (Hunnanese)'), ('Malayalam', 'Malayalam'), ('Sundanese', 'Sundanese'), ('Hausa', 'Hausa'), ('Odia (Oriya)', 'Odia (Oriya)'), ('Burmese', 'Burmese'), ('Hakka', 'Hakka'), ('Ukrainian', 'Ukrainian'), ('Bhojpuri', 'Bhojpuri'), ('Tagalog', 'Tagalog'), ('Yoruba', 'Yoruba'), ('Maithili', 'Maithili'), ('Uzbek', 'Uzbek'), ('Sindhi', 'Sindhi'), ('Amharic', 'Amharic'), ('Fula', 'Fula'), ('Romanian', 'Romanian'), ('Oromo', 'Oromo'), ('Igbo', 'Igbo'), ('Azerbaijani', 'Azerbaijani'), ('Awadhi', 'Awadhi'), ('Gan Chinese', 'Gan Chinese'), ('Cebuano (Visayan)', 'Cebuano (Visayan)'), ('Dutch', 'Dutch'), ('Kurdish', 'Kurdish'), ('Serbo-Croatian', 'Serbo-Croatian'), ('Malagasy', 'Malagasy'), ('Saraiki', 'Saraiki'), ('Nepali', 'Nepali'), ('Sinhalese', 'Sinhalese'), ('Chittagonian', 'Chittagonian'), ('Zhuang', 'Zhuang'), ('Khmer', 'Khmer'), ('Turkmen', 'Turkmen'), ('Assamese', 'Assamese'), ('Madurese', 'Madurese'), ('Somali', 'Somali'), ('Marwari', 'Marwari'), ('Magahi', 'Magahi'), ('Haryanvi', 'Haryanvi'), ('Hungarian', 'Hungarian'), ('Chhattisgarhi', 'Chhattisgarhi'), ('Greek', 'Greek'), ('Chewa', 'Chewa'), ('Deccan', 'Deccan'), ('Akan', 'Akan'), ('Kazakh', 'Kazakh'), ('Northern Min', 'Northern Min'), ('Sylheti', 'Sylheti'), ('Zulu', 'Zulu'), ('Czech', 'Czech'), ('Kinyarwanda', 'Kinyarwanda'), ('Dhundhari', 'Dhundhari'), ('Haitian Creole', 'Haitian Creole'), ('Eastern Min', 'Eastern Min'), ('Ilocano', 'Ilocano'), ('Quechua', 'Quechua'), ('Kirundi', 'Kirundi'), ('Swedish', 'Swedish'), ('Hmong', 'Hmong'), ('Shona', 'Shona'), ('Uyghur', 'Uyghur'), ('Hiligaynon', 'Hiligaynon'), ('Mossi', 'Mossi'), ('Xhosa', 'Xhosa'), ('Belarusian', 'Belarusian'), ('Balochi', 'Balochi'), ('Konkani', 'Konkani')], max_length=50)),
                ('yp_status', models.CharField(choices=[('S17', 'S17'), ('S20', 'S20'), ('S21', 'S21'), ('S22', 'S22'), ('S24', 'S24'), ('S31', 'S31'), ('S33', 'S33'), ('S38', 'S38')], max_length=50)),
                ('yp_uasc', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], default='No', max_length=10)),
                ('yp_date_added', models.DateTimeField(default=django.utils.timezone.now)),
                ('parenthood', models.CharField(choices=[('Young Parent', 'Young Parent'), ('Not a Parent', 'Not a Parent')], default='No', max_length=15)),
                ('assigned_home', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='admission.care_house_information')),
                ('local_authority', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='admission.local_authority')),
                ('staff', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Young Person General Information',
            },
        ),
        migrations.CreateModel(
            name='YP_Relationships_Associates',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('next_of_kin', models.CharField(max_length=100)),
                ('relationship_wth_next_kin', models.CharField(max_length=100)),
                ('next_of_kin_phone', models.IntegerField(default=0)),
                ('close_friend_name', models.CharField(max_length=100)),
                ('contact_phone_close_friend', models.IntegerField(default=0)),
                ('work_school_contact_phone', models.IntegerField(default=0)),
                ('place_worship_details', ckeditor.fields.RichTextField(blank=True, null=True)),
                ('places_known_frequent', ckeditor.fields.RichTextField(blank=True, null=True)),
                ('yp', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='admission.yp_general_information')),
            ],
            options={
                'verbose_name_plural': 'Young Person Relationships and Associates',
            },
        ),
        migrations.CreateModel(
            name='YP_Profile_Child',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('yp_streghts', ckeditor.fields.RichTextField(blank=True, null=True)),
                ('yp_achivements', ckeditor.fields.RichTextField(blank=True, null=True)),
                ('yp_hobbies', ckeditor.fields.RichTextField(blank=True, null=True)),
                ('personality', ckeditor.fields.RichTextField(blank=True, null=True)),
                ('yp', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='admission.yp_general_information')),
            ],
            options={
                'verbose_name_plural': 'Young Person Contact Information',
            },
        ),
        migrations.CreateModel(
            name='YP_Physical_Description',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('yp_height', models.IntegerField(default=0)),
                ('yp_weight', models.IntegerField(default=0)),
                ('yp_build', models.CharField(choices=[('Fat', 'Fat'), ('Stocky', 'Stocky'), ('Prop', 'Prop'), ('Thin', 'Thin'), ('Slight', 'Slight'), ('Heavy', 'Heavy'), ('Broad', 'Broad'), ('Medium', 'Medium'), ('Slim', 'Slim'), ('Small', 'Small')], default='Slim', max_length=10)),
                ('yp_complexion', models.CharField(max_length=100)),
                ('yp_eye_colour', models.CharField(max_length=100)),
                ('yp_hair_colour', models.CharField(max_length=100)),
                ('yp_marks_scars_tattoos', models.CharField(max_length=100)),
                ('yp_disabilities', models.CharField(max_length=100)),
                ('yp_relevant_medical_information', ckeditor.fields.RichTextField(blank=True, null=True)),
                ('yp_medications', ckeditor.fields.RichTextField(blank=True, null=True)),
                ('yp_date_added', models.DateTimeField(default=django.utils.timezone.now)),
                ('yp', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='admission.yp_general_information')),
            ],
            options={
                'verbose_name_plural': 'Young Person Physical Description',
            },
        ),
        migrations.CreateModel(
            name='YP_Pen_Pic',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('yp_pen_picture', ckeditor.fields.RichTextField(blank=True, null=True)),
                ('yp_pen_picture_background', ckeditor.fields.RichTextField(blank=True, null=True)),
                ('yp', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='admission.yp_general_information')),
            ],
            options={
                'verbose_name_plural': 'Young Person Pen Picture',
            },
        ),
        migrations.CreateModel(
            name='YP_IPA',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('yp_placement_start_date', models.DateField(default=django.utils.datetime_safe.date.today)),
                ('yp_initial_ipa_received_date', models.DateField(default=django.utils.datetime_safe.date.today)),
                ('yp_last_ipa_start_date', models.DateField(default=django.utils.datetime_safe.date.today)),
                ('yp_proposed_placement_end_date', models.DateField(default=django.utils.datetime_safe.date.today)),
                ('yp_type_placement', models.CharField(max_length=100)),
                ('yp_date_added', models.DateTimeField(default=django.utils.timezone.now)),
                ('yp', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ipa', to='admission.yp_general_information')),
            ],
            options={
                'verbose_name_plural': 'Young Person IPA',
            },
        ),
        migrations.CreateModel(
            name='YP_Health_And_Wellness',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('yp_ability_to_make_attachments', ckeditor.fields.RichTextField(blank=True, null=True)),
                ('yp_food_allergies', ckeditor.fields.RichTextField(blank=True, null=True)),
                ('yp_allergies_and_attitudes', ckeditor.fields.RichTextField(blank=True, null=True)),
                ('yp_resilience_and_self_esteem', ckeditor.fields.RichTextField(blank=True, null=True)),
                ('yp_substance_misuse_issues', ckeditor.fields.RichTextField(blank=True, null=True)),
                ('yp_sexual_health', ckeditor.fields.RichTextField(blank=True, null=True)),
                ('yp_Attitude_To_Food_And_Weight', ckeditor.fields.RichTextField(blank=True, null=True)),
                ('yp_smoking', ckeditor.fields.RichTextField(blank=True, null=True)),
                ('yp_personal_hygiene', ckeditor.fields.RichTextField(blank=True, null=True)),
                ('yp_learning_difficulties', ckeditor.fields.RichTextField(blank=True, null=True)),
                ('yp_physical_or_sensory_impairments_and_disabilities', ckeditor.fields.RichTextField(blank=True, null=True)),
                ('yp_healthcare_professional_involvement', ckeditor.fields.RichTextField(blank=True, null=True)),
                ('yp_date_added', models.DateTimeField(default=django.utils.timezone.now)),
                ('yp', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='admission.yp_general_information')),
            ],
            options={
                'verbose_name_plural': 'Young Person Health and Wellness',
            },
        ),
        migrations.CreateModel(
            name='YP_Contact_Info',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mobile_number', models.IntegerField(default=0)),
                ('travel_card', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], default='No', max_length=10)),
                ('email_address', models.CharField(max_length=100)),
                ('facebook', models.CharField(max_length=100)),
                ('twitter', models.CharField(max_length=100)),
                ('snapchat', models.CharField(max_length=100)),
                ('instagram', models.CharField(max_length=100)),
                ('other', models.CharField(max_length=100)),
                ('yp', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='admission.yp_general_information')),
            ],
            options={
                'verbose_name_plural': 'Young Person Contact Information',
            },
        ),
        migrations.CreateModel(
            name='YP_Banking_Information',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('yp_bank', models.CharField(max_length=100)),
                ('yp_bank_name', models.CharField(max_length=100)),
                ('yp_bank_sort_code', models.IntegerField(default=0)),
                ('yp_bank_account_number', models.IntegerField(default=0)),
                ('yp_date_added', models.DateTimeField(default=django.utils.timezone.now)),
                ('yp', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='admission.yp_general_information')),
            ],
            options={
                'verbose_name_plural': 'Young Person Banking Information',
            },
        ),
        migrations.CreateModel(
            name='Profile_Pic',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(default='default.jpg', upload_to='profile_pics')),
                ('yp', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='admission.yp_general_information')),
            ],
        ),
    ]
